/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/theme.js":
/*!*******************************!*\
  !*** ./resources/js/theme.js ***!
  \*******************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\"use strict\";\n(function () {\n  // Menu toggle for admin dashboard\n  var navToggle = document.getElementById(\"nav-toggle\");\n  var dbWrapper = document.getElementById(\"app-layout\");\n  if (navToggle) {\n    navToggle.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      if (dbWrapper) {\n        dbWrapper.classList.toggle(\"toggled\");\n      }\n    });\n  }\n\n  // Default Popover\n  var popoverTriggers = document.querySelectorAll('[data-bs-toggle=\"popover\"]');\n  if (popoverTriggers.length) {\n    popoverTriggers.forEach(function (popoverTriggerEl) {\n      new Popover(popoverTriggerEl);\n    });\n  }\n\n  // Scrollspy\n  var scrollSpyElements = document.querySelectorAll('[data-bs-spy=\"scroll\"]');\n  if (scrollSpyElements.length) {\n    scrollSpyElements.forEach(function (dataSpyEl) {\n      new ScrollSpy(dataSpyEl).refresh();\n    });\n  }\n\n  // Toast\n\n  var toastTrigger = document.getElementById(\"liveToastBtn\");\n  var toastLiveExample = document.getElementById(\"liveToast\");\n  if (toastTrigger) {\n    var toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample);\n    toastTrigger.addEventListener(\"click\", function () {\n      toastBootstrap.show();\n    });\n  }\n\n  // Performance Chart\n  var perfomanceChart = document.getElementById(\"perfomanceChart\");\n  if (perfomanceChart) {\n    var options = {\n      series: [100, 78, 89],\n      chart: {\n        height: 320,\n        type: \"radialBar\"\n      },\n      colors: [\"#28a745\", \"#ffc107\", \"#dc3545\"],\n      stroke: {\n        lineCap: \"round\"\n      },\n      plotOptions: {\n        radialBar: {\n          startAngle: -168,\n          endAngle: -450,\n          hollow: {\n            size: \"55%\"\n          },\n          track: {\n            background: \"transparent\"\n          },\n          dataLabels: {\n            show: false\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(perfomanceChart, options);\n    chart.render();\n  }\n\n  // Offcanvas\n  var offcanvasElements = document.querySelectorAll(\".offcanvas\");\n  if (offcanvasElements.length) {\n    var offcanvasElementList = document.querySelectorAll(\".offcanvas\");\n    var offcanvasList = _toConsumableArray(offcanvasElementList).map(function (offcanvasEl) {\n      return new bootstrap.Offcanvas(offcanvasEl);\n    });\n  }\n\n  // Dropzone\n  var dropzoneElements = document.querySelectorAll(\"#my-dropzone\");\n  if (dropzoneElements.length) {\n    Dropzone.autoDiscover = false;\n    var myDropzone = new Dropzone(\"#my-dropzone\", {\n      url: \"https://httpbin.org/post\",\n      maxFilesize: 5,\n      acceptedFiles: \"image/*\",\n      addRemoveLinks: true,\n      autoProcessQueue: true\n    });\n\n    // Add event listeners\n    myDropzone.on(\"addedfile\", function (file) {\n      console.log(\"File added: \" + file.name);\n    });\n    myDropzone.on(\"removedfile\", function (file) {\n      console.log(\"File removed: \" + file.name);\n    });\n    myDropzone.on(\"success\", function (file, response) {\n      console.log(\"File uploaded successfully:\", response);\n    });\n  }\n\n  // Tooltips\n\n  var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n  if (tooltipTriggerList.length) {\n    var tooltipList = _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n  }\n\n  // Feather.js\n  feather.replace();\n})();\n\n// Simplbar js\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Get the sidebar element\n  var sidebar = document.getElementById(\"myScrollableElement\");\n\n  // Check if the sidebar element exists\n  if (sidebar) {\n    // Initialize SimpleBar only if the sidebar element is found\n    var simpleBar = new SimpleBar(sidebar);\n\n    // Your existing code for handling links and scrolling\n    var links = document.querySelectorAll(\".navbar-nav a\");\n\n    // Check if there are any links\n    if (links.length > 0) {\n      var lastLink = links[links.length - 1];\n      simpleBar.getScrollElement().scrollTop = lastLink.offsetTop - sidebar.offsetTop;\n      links.forEach(function (link) {\n        link.addEventListener(\"click\", function (event) {\n          if (this.getAttribute(\"href\").charAt(0) === \"#\") {\n            event.preventDefault();\n            var targetId = this.getAttribute(\"href\").substring(1);\n            var targetSection = document.getElementById(targetId);\n            if (targetSection) {\n              var offsetTop = targetSection.offsetTop;\n              simpleBar.getScrollElement().scrollTop = offsetTop - sidebar.offsetTop;\n            }\n          }\n        });\n      });\n    } else {\n      console.error(\"No links found in the navbar.\");\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/theme.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/theme.js"]();
/******/ 	
/******/ })()
;